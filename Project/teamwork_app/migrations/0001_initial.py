# Generated by Django 4.2.6 on 2023-10-25 15:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Board",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("first_name", models.CharField(max_length=128, verbose_name="Имя")),
                (
                    "second_name",
                    models.CharField(max_length=128, verbose_name="Фамилия"),
                ),
                (
                    "fam_name",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Отчество"
                    ),
                ),
                (
                    "login",
                    models.EmailField(
                        max_length=128, unique=True, verbose_name="Логин"
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                (
                    "is_manager",
                    models.BooleanField(
                        default=False,
                        verbose_name="Является ли пользователь менеджером",
                    ),
                ),
                (
                    "post",
                    models.CharField(
                        choices=[
                            ("JR", "Junior developer"),
                            ("MD", "Middle developer"),
                            ("SR", "Senior developer"),
                            ("TL", "Team lead"),
                            ("PM", "Project manager"),
                        ],
                        max_length=128,
                        verbose_name="Должность",
                    ),
                ),
            ],
            options={
                "verbose_name": "Сотрудник",
                "verbose_name_plural": "Список сотрудников",
                "ordering": ("first_name",),
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=128, verbose_name="Название")),
                (
                    "description",
                    models.CharField(max_length=200, verbose_name="Описание"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата создания"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project",
                        to="teamwork_app.employee",
                        verbose_name="Создатель проекта",
                    ),
                ),
                (
                    "employee",
                    models.ManyToManyField(
                        related_name="project_as_employee",
                        to="teamwork_app.employee",
                        verbose_name="Сотрудник проекта",
                    ),
                ),
                (
                    "task_manager",
                    models.ManyToManyField(
                        related_name="project_as_manager",
                        to="teamwork_app.employee",
                        verbose_name="Менеджер проекта",
                    ),
                ),
            ],
            options={
                "verbose_name": "Проект",
                "verbose_name_plural": "Список проектов",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=128, verbose_name="Название")),
                (
                    "description",
                    models.CharField(max_length=200, verbose_name="Описание"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата создания"),
                ),
                ("deadline", models.DateTimeField(verbose_name="Дата окончания")),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("Lowset", "Очень низкий"),
                            ("Low", "Низкий"),
                            ("Medium", "Средний"),
                            ("High", "Важный"),
                            ("Highest", "Срочный"),
                        ],
                        max_length=128,
                        verbose_name="Приоритет",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Bug", "Баг"),
                            ("Task", "Задача"),
                            ("Epic", "Epic"),
                            ("Refactor", "Рефакторинг"),
                        ],
                        max_length=128,
                        verbose_name="Тип задачи",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("TO DO", "Созданo"),
                            ("Stopped", "Приостановлено"),
                            ("In progress", "В работе"),
                            ("Review", "На ревью"),
                            ("In testing", "В тестировании"),
                            ("Complete", "Выполнено"),
                        ],
                        max_length=128,
                        verbose_name="Статус задачи",
                    ),
                ),
                (
                    "executor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task",
                        to="teamwork_app.employee",
                        verbose_name="Исполнитель",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="teamwork_app.project",
                        verbose_name="Проект",
                    ),
                ),
            ],
            options={
                "verbose_name": "Задача",
                "verbose_name_plural": "Список задач",
                "ordering": ("project",),
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "description",
                    models.CharField(max_length=200, verbose_name="Описание"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата создания"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="teamwork_app.employee",
                        verbose_name="Автор комментария",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="teamwork_app.task",
                        verbose_name="Задача",
                    ),
                ),
            ],
            options={
                "verbose_name": "Комментарий",
                "verbose_name_plural": "Список комментариев",
                "ordering": ("task",),
            },
        ),
    ]
